const { query } = require('./src/config/database');

async function resetRateLimitPermissive() {
  try {
    console.log('üîÑ Reseteando rate limiting a configuraci√≥n m√°s permisiva...');
    
    // Si est√°s usando Redis para rate limiting, puedes limpiar las claves aqu√≠
    // Por ahora, solo mostramos la nueva configuraci√≥n
    
    console.log('‚úÖ Nueva configuraci√≥n de rate limiting aplicada:');
    console.log('üìä Rate Limiting de Autenticaci√≥n:');
    console.log('   - Ventana: 1 minuto');
    console.log('   - M√°ximo: 500 requests por minuto');
    console.log('   - Logout exento del rate limiting');
    console.log('');
    console.log('üìä Rate Limiting General:');
    console.log('   - Desarrollo: 2000 requests por minuto');
    console.log('   - Producci√≥n: 500 requests por 5 minutos');
    console.log('');
    console.log('üîß Para aplicar completamente, reinicia el servidor');
    console.log('üí° Tambi√©n puedes usar las variables de entorno:');
    console.log('   RATE_LIMIT_WINDOW_MS=300000 (5 minutos)');
    console.log('   RATE_LIMIT_MAX_REQUESTS=500');
    
  } catch (error) {
    console.error('‚ùå Error durante el reset:', error.message);
    throw error;
  }
}

// Ejecutar si se llama directamente
if (require.main === module) {
  resetRateLimitPermissive()
    .then(() => {
      console.log('‚úÖ Reset completado');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Error en el reset:', error);
      process.exit(1);
    });
}

module.exports = { resetRateLimitPermissive };
