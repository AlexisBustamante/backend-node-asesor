const { Pool } = require('pg');
require('dotenv').config();

const pool = new Pool({
  connectionString: process.env.DATABASE_URL || process.env.DB_CONNECTION_STRING,
  ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false
});

async function testCotizacionNumeros() {
  const client = await pool.connect();
  
  try {
    console.log('üß™ Probando validaci√≥n de campos num√©ricos...');
    
    // Caso 1: Campos num√©ricos v√°lidos
    console.log('\n‚úÖ Caso 1: Campos num√©ricos v√°lidos');
    const cotizacionValida = {
      nombre: 'Juan P√©rez',
      apellidos: 'Gonz√°lez',
      edad: '35',
      telefono: '+56912345678',
      email: 'juan@test.com',
      isapre: 'Banm√©dica',
      valor_mensual: '50000',
      clinica: 'Cl√≠nica Alemana',
      renta: '1500000',
      numero_cargas: '2',
      edades_cargas: '8, 12',
      mensaje: 'Test de validaci√≥n',
      procedencia: 'Test',
      tipo_ingreso: 'Dependiente'
    };
    
    console.log('Datos de prueba:', cotizacionValida);
    
    // Caso 2: Campos num√©ricos vac√≠os (deber√≠an convertirse a null)
    console.log('\n‚ö†Ô∏è  Caso 2: Campos num√©ricos vac√≠os');
    const cotizacionConVacios = {
      nombre: 'Mar√≠a L√≥pez',
      apellidos: 'Rodr√≠guez',
      edad: '',
      telefono: '',
      email: 'maria@test.com',
      isapre: 'Fonasa',
      valor_mensual: '',
      clinica: 'Cl√≠nica Las Condes',
      renta: '',
      numero_cargas: '',
      edades_cargas: '',
      mensaje: 'Test con campos vac√≠os',
      procedencia: 'Test',
      tipo_ingreso: 'Independiente'
    };
    
    console.log('Datos de prueba:', cotizacionConVacios);
    
    // Caso 3: Campos num√©ricos inv√°lidos
    console.log('\n‚ùå Caso 3: Campos num√©ricos inv√°lidos');
    const cotizacionInvalida = {
      nombre: 'Pedro Garc√≠a',
      apellidos: 'Mart√≠nez',
      edad: 'abc',
      telefono: '+56987654321',
      email: 'pedro@test.com',
      isapre: 'Colmena',
      valor_mensual: 'xyz',
      clinica: 'Cl√≠nica Santa Mar√≠a',
      renta: 'def',
      numero_cargas: 'ghi',
      edades_cargas: '5, 10',
      mensaje: 'Test con datos inv√°lidos',
      procedencia: 'Test',
      tipo_ingreso: 'Dependiente'
    };
    
    console.log('Datos de prueba:', cotizacionInvalida);
    
    console.log('\nüìã Resumen de pruebas:');
    console.log('‚úÖ Caso 1: Deber√≠a funcionar correctamente');
    console.log('‚ö†Ô∏è  Caso 2: Deber√≠a funcionar (campos vac√≠os se convierten a null)');
    console.log('‚ùå Caso 3: Deber√≠a fallar con validaci√≥n de tipos');
    
    console.log('\nüí° Para probar realmente, ejecuta el servidor y env√≠a requests POST a:');
    console.log('   - /api/cotizaciones (caso p√∫blico)');
    console.log('   - /api/cotizaciones/admin (caso admin)');
    
  } catch (error) {
    console.error('‚ùå Error durante la prueba:', error);
  } finally {
    client.release();
    await pool.end();
  }
}

// Ejecutar el script
testCotizacionNumeros().catch(console.error);
